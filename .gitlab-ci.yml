image: maven:3.6-openjdk-15-slim

.template: &gpg
  # install gnupg version 2 and importing the certificate
  - apt-get update
  - apt-get install -y gnupg2
  - export GPG_TTY=$(tty)
  - gpg --import $CI_GPG_PUBLIC_KEY
  - gpg --import --pinentry-mode=loopback --passphrase=$CI_GPG_PASSPHRASE $CI_GPG_SECRET_KEY

cache:
  key: '$CI_PROJECT_NAME'
  paths:
    - .maven/

before_script:
  - export MAVEN_USER_HOME=`pwd`/.maven

stages:
  - initialize
  - validate
  - compile
  - test
  - package
  - verify
  - deploy
  - release

compile:
  stage: compile
  script:
    - mvn compile -Dmaven.repo.local=$MAVEN_USER_HOME
  artifacts:
    paths:
      - target/
    expire_in: 1 day

unit-test:
  stage: test
  except:
    - tags
  script:
    - mvn test -Dmaven.repo.local=$MAVEN_USER_HOME
  artifacts:
    paths:
      - target/
    expire_in: 1 day

jar:
  stage: package
  before_script:
    *gpg
  except:
    - tags
  script:
    - mvn package gpg:sign -Prelease -DskipTests -Dmaven.repo.local=$MAVEN_USER_HOME
  artifacts:
    paths:
      - target/

javadoc:
  stage: package
  before_script:
    *gpg
  script:
    - mvn javadoc:jar gpg:sign -Prelease -Dmaven.repo.local=$MAVEN_USER_HOME
  artifacts:
    paths:
      - target/

source:
  stage: package
  before_script:
    *gpg
  script:
    - mvn source:jar gpg:sign -Prelease -Dmaven.repo.local=$MAVEN_USER_HOME
  artifacts:
    paths:
      - target/

deploy-jar:
  stage: deploy
  script:
    - mvn deploy -Prelease --settings "$CI_GITLAB_MAVEN_SETTING" -DskipTests -Dmaven.repo.local=$MAVEN_USER_HOME
  when: manual

release:
  stage: release
  before_script:
    *gpg
  script:
    - mvn clean -Prelease -B -DskipTests -Darguments=-DskipTests release:prepare release:perform -Dmaven.repo.local=$MAVEN_USER_HOME
    - mvn deploy -Prelease --settings "$CI_GITLAB_MAVEN_SETTING" -DskipTests -Dmaven.repo.local=$MAVEN_USER_HOME
  when: manual
